// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#include "order.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr OrderInfo::OrderInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : broker_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , investor_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reserve_1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_ref_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_price_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , direction_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comb_offset_flag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comb_hedge_flag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , time_condition_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , gtd_date_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , volume_condition_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contingent_condition_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , force_close_reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , business_unit_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_local_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , exchange_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , participant_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , client_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reserve_2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , trader_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_submit_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , trading_day_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_sys_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_source_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , insert_date_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , insert_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , active_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , suspend_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , update_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cancel_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , active_trader_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , clearing_part_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_product_info_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , active_user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , relative_order_sys_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , branch_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , invest_unit_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , account_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , currency_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reserve_3_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mac_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , instrument_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , exchange_inst_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , direction_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_status_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_msg_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comb_offset_flag_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , limit_price_(0)
  , volume_total_original_(0)
  , min_volume_(0)
  , stop_price_(0)
  , is_auto_suspend_(0)
  , request_id_(0)
  , install_id_(0)
  , notify_sequence_(0)
  , settlement_id_(0)
  , volume_traded_(0)
  , volume_total_(0)
  , sequence_no_(0)
  , front_id_(0)
  , session_id_(0)
  , user_force_close_(0)
  , broker_order_seq_(0)
  , zce_total_traded_volume_(0)
  , is_swap_order_(0){}
struct OrderInfoDefaultTypeInternal {
  constexpr OrderInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OrderInfoDefaultTypeInternal() {}
  union {
    OrderInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OrderInfoDefaultTypeInternal _OrderInfo_default_instance_;
constexpr OrderActionInfo::OrderActionInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : broker_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , investor_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_ref_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , exchange_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_sys_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_flag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_date_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , trader_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_local_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_local_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , participant_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , client_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , business_unit_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_action_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reserve_1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , branch_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , invest_unit_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reserve_2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mac_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , instrument_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , direction_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_status_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comb_offset_flag_zn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_action_ref_(0)
  , request_id_(0)
  , front_id_(0)
  , session_id_(0)
  , limit_price_(0)
  , volume_change_(0)
  , install_id_(0){}
struct OrderActionInfoDefaultTypeInternal {
  constexpr OrderActionInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OrderActionInfoDefaultTypeInternal() {}
  union {
    OrderActionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OrderActionInfoDefaultTypeInternal _OrderActionInfo_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_order_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_order_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_order_2eproto = nullptr;

const uint32_t TableStruct_order_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrderInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OrderInfo, broker_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, investor_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, reserve_1_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_ref_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, user_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_price_type_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, direction_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, comb_offset_flag_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, comb_hedge_flag_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, limit_price_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, volume_total_original_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, time_condition_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, gtd_date_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, volume_condition_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, min_volume_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, contingent_condition_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, stop_price_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, force_close_reason_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, is_auto_suspend_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, business_unit_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, request_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_local_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, exchange_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, participant_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, client_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, reserve_2_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, trader_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, install_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_submit_status_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, notify_sequence_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, trading_day_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, settlement_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_sys_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_source_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_status_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_type_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, volume_traded_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, volume_total_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, insert_date_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, insert_time_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, active_time_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, suspend_time_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, update_time_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, cancel_time_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, active_trader_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, clearing_part_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, sequence_no_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, front_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, session_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, user_product_info_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, status_msg_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, user_force_close_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, active_user_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, broker_order_seq_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, relative_order_sys_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, zce_total_traded_volume_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, is_swap_order_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, branch_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, invest_unit_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, account_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, currency_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, reserve_3_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, mac_address_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, instrument_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, exchange_inst_id_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, ip_address_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, direction_zn_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, order_status_zn_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, status_msg_zn_),
  PROTOBUF_FIELD_OFFSET(::OrderInfo, comb_offset_flag_zn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, broker_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, investor_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, order_action_ref_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, order_ref_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, request_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, front_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, session_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, exchange_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, order_sys_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, action_flag_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, limit_price_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, volume_change_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, action_date_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, action_time_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, trader_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, install_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, order_local_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, action_local_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, participant_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, client_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, business_unit_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, order_action_status_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, user_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, status_msg_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, reserve_1_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, branch_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, invest_unit_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, reserve_2_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, mac_address_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, instrument_id_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, ip_address_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, direction_zn_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, order_status_zn_),
  PROTOBUF_FIELD_OFFSET(::OrderActionInfo, comb_offset_flag_zn_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::OrderInfo)},
  { 76, -1, -1, sizeof(::OrderActionInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_OrderInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_OrderActionInfo_default_instance_),
};

const char descriptor_table_protodef_order_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013order.proto\"\303\014\n\tOrderInfo\022\021\n\tbroker_id"
  "\030\001 \001(\t\022\023\n\013investor_id\030\002 \001(\t\022\021\n\treserve_1"
  "\030\003 \001(\t\022\021\n\torder_ref\030\004 \001(\t\022\017\n\007user_id\030\005 \001"
  "(\t\022\030\n\020order_price_type\030\006 \001(\t\022\021\n\tdirectio"
  "n\030\007 \001(\t\022\030\n\020comb_offset_flag\030\010 \001(\t\022\027\n\017com"
  "b_hedge_flag\030\t \001(\t\022\023\n\013limit_price\030\n \001(\001\022"
  "\035\n\025volume_total_original\030\013 \001(\005\022\026\n\016time_c"
  "ondition\030\014 \001(\t\022\020\n\010gtd_date\030\r \001(\t\022\030\n\020volu"
  "me_condition\030\016 \001(\t\022\022\n\nmin_volume\030\017 \001(\005\022\034"
  "\n\024contingent_condition\030\020 \001(\t\022\022\n\nstop_pri"
  "ce\030\021 \001(\001\022\032\n\022force_close_reason\030\022 \001(\t\022\027\n\017"
  "is_auto_suspend\030\023 \001(\005\022\025\n\rbusiness_unit\030\024"
  " \001(\t\022\022\n\nrequest_id\030\025 \001(\005\022\026\n\016order_local_"
  "id\030\026 \001(\t\022\023\n\013exchange_id\030\027 \001(\t\022\026\n\016partici"
  "pant_id\030\030 \001(\t\022\021\n\tclient_id\030\031 \001(\t\022\021\n\trese"
  "rve_2\030\032 \001(\t\022\021\n\ttrader_id\030\033 \001(\t\022\022\n\ninstal"
  "l_id\030\034 \001(\005\022\033\n\023order_submit_status\030\035 \001(\t\022"
  "\027\n\017notify_sequence\030\036 \001(\005\022\023\n\013trading_day\030"
  "\037 \001(\t\022\025\n\rsettlement_id\030  \001(\005\022\024\n\014order_sy"
  "s_id\030! \001(\t\022\024\n\014order_source\030\" \001(\t\022\024\n\014orde"
  "r_status\030# \001(\t\022\022\n\norder_type\030$ \001(\t\022\025\n\rvo"
  "lume_traded\030% \001(\005\022\024\n\014volume_total\030& \001(\005\022"
  "\023\n\013insert_date\030\' \001(\t\022\023\n\013insert_time\030( \001("
  "\t\022\023\n\013active_time\030) \001(\t\022\024\n\014suspend_time\030*"
  " \001(\t\022\023\n\013update_time\030+ \001(\t\022\023\n\013cancel_time"
  "\030, \001(\t\022\030\n\020active_trader_id\030- \001(\t\022\030\n\020clea"
  "ring_part_id\030. \001(\t\022\023\n\013sequence_no\030/ \001(\005\022"
  "\020\n\010front_id\0300 \001(\005\022\022\n\nsession_id\0301 \001(\005\022\031\n"
  "\021user_product_info\0302 \001(\t\022\022\n\nstatus_msg\0303"
  " \001(\t\022\030\n\020user_force_close\0304 \001(\005\022\026\n\016active"
  "_user_id\0305 \001(\t\022\030\n\020broker_order_seq\0306 \001(\005"
  "\022\035\n\025relative_order_sys_id\0307 \001(\t\022\037\n\027zce_t"
  "otal_traded_volume\0308 \001(\005\022\025\n\ris_swap_orde"
  "r\0309 \001(\005\022\021\n\tbranch_id\030: \001(\t\022\026\n\016invest_uni"
  "t_id\030; \001(\t\022\022\n\naccount_id\030< \001(\t\022\023\n\013curren"
  "cy_id\030= \001(\t\022\021\n\treserve_3\030> \001(\t\022\023\n\013mac_ad"
  "dress\030\? \001(\t\022\025\n\rinstrument_id\030@ \001(\t\022\030\n\020ex"
  "change_inst_id\030A \001(\t\022\022\n\nip_address\030B \001(\t"
  "\022\024\n\014direction_zn\030C \001(\t\022\027\n\017order_status_z"
  "n\030D \001(\t\022\025\n\rstatus_msg_zn\030E \001(\t\022\033\n\023comb_o"
  "ffset_flag_zn\030F \001(\t\"\357\005\n\017OrderActionInfo\022"
  "\021\n\tbroker_id\030\001 \001(\t\022\023\n\013investor_id\030\002 \001(\t\022"
  "\030\n\020order_action_ref\030\003 \001(\005\022\021\n\torder_ref\030\004"
  " \001(\t\022\022\n\nrequest_id\030\005 \001(\005\022\020\n\010front_id\030\006 \001"
  "(\005\022\022\n\nsession_id\030\007 \001(\005\022\023\n\013exchange_id\030\010 "
  "\001(\t\022\024\n\014order_sys_id\030\t \001(\t\022\023\n\013action_flag"
  "\030\n \001(\t\022\023\n\013limit_price\030\013 \001(\001\022\025\n\rvolume_ch"
  "ange\030\014 \001(\005\022\023\n\013action_date\030\r \001(\t\022\023\n\013actio"
  "n_time\030\016 \001(\t\022\021\n\ttrader_id\030\017 \001(\t\022\022\n\ninsta"
  "ll_id\030\020 \001(\005\022\026\n\016order_local_id\030\021 \001(\t\022\027\n\017a"
  "ction_local_id\030\022 \001(\t\022\026\n\016participant_id\030\023"
  " \001(\t\022\021\n\tclient_id\030\024 \001(\t\022\025\n\rbusiness_unit"
  "\030\025 \001(\t\022\033\n\023order_action_status\030\026 \001(\t\022\017\n\007u"
  "ser_id\030\027 \001(\t\022\022\n\nstatus_msg\030\030 \001(\t\022\021\n\trese"
  "rve_1\030\031 \001(\t\022\021\n\tbranch_id\030\032 \001(\t\022\026\n\016invest"
  "_unit_id\030\033 \001(\t\022\021\n\treserve_2\030\034 \001(\t\022\023\n\013mac"
  "_address\030\035 \001(\t\022\025\n\rinstrument_id\030\036 \001(\t\022\022\n"
  "\nip_address\030\037 \001(\t\022\024\n\014direction_zn\030  \001(\t\022"
  "\027\n\017order_status_zn\030! \001(\t\022\033\n\023comb_offset_"
  "flag_zn\030\" \001(\tB\"Z github.com/crazy-choose"
  "/pb/modelb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_order_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_order_2eproto = {
  false, false, 2417, descriptor_table_protodef_order_2eproto, "order.proto", 
  &descriptor_table_order_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_order_2eproto::offsets,
  file_level_metadata_order_2eproto, file_level_enum_descriptors_order_2eproto, file_level_service_descriptors_order_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_order_2eproto_getter() {
  return &descriptor_table_order_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_order_2eproto(&descriptor_table_order_2eproto);

// ===================================================================

class OrderInfo::_Internal {
 public:
};

OrderInfo::OrderInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OrderInfo)
}
OrderInfo::OrderInfo(const OrderInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    broker_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_broker_id().empty()) {
    broker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_broker_id(), 
      GetArenaForAllocation());
  }
  investor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    investor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_investor_id().empty()) {
    investor_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_investor_id(), 
      GetArenaForAllocation());
  }
  reserve_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reserve_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reserve_1().empty()) {
    reserve_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reserve_1(), 
      GetArenaForAllocation());
  }
  order_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_ref().empty()) {
    order_ref_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_ref(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  order_price_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_price_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_price_type().empty()) {
    order_price_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_price_type(), 
      GetArenaForAllocation());
  }
  direction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    direction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_direction().empty()) {
    direction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_direction(), 
      GetArenaForAllocation());
  }
  comb_offset_flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comb_offset_flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comb_offset_flag().empty()) {
    comb_offset_flag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comb_offset_flag(), 
      GetArenaForAllocation());
  }
  comb_hedge_flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comb_hedge_flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comb_hedge_flag().empty()) {
    comb_hedge_flag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comb_hedge_flag(), 
      GetArenaForAllocation());
  }
  time_condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    time_condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_time_condition().empty()) {
    time_condition_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_time_condition(), 
      GetArenaForAllocation());
  }
  gtd_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    gtd_date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gtd_date().empty()) {
    gtd_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gtd_date(), 
      GetArenaForAllocation());
  }
  volume_condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    volume_condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_volume_condition().empty()) {
    volume_condition_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_volume_condition(), 
      GetArenaForAllocation());
  }
  contingent_condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contingent_condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contingent_condition().empty()) {
    contingent_condition_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contingent_condition(), 
      GetArenaForAllocation());
  }
  force_close_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    force_close_reason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_force_close_reason().empty()) {
    force_close_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_force_close_reason(), 
      GetArenaForAllocation());
  }
  business_unit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    business_unit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_business_unit().empty()) {
    business_unit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_business_unit(), 
      GetArenaForAllocation());
  }
  order_local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_local_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_local_id().empty()) {
    order_local_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_local_id(), 
      GetArenaForAllocation());
  }
  exchange_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    exchange_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_exchange_id().empty()) {
    exchange_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_exchange_id(), 
      GetArenaForAllocation());
  }
  participant_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    participant_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_participant_id().empty()) {
    participant_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_participant_id(), 
      GetArenaForAllocation());
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_client_id(), 
      GetArenaForAllocation());
  }
  reserve_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reserve_2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reserve_2().empty()) {
    reserve_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reserve_2(), 
      GetArenaForAllocation());
  }
  trader_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    trader_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trader_id().empty()) {
    trader_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trader_id(), 
      GetArenaForAllocation());
  }
  order_submit_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_submit_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_submit_status().empty()) {
    order_submit_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_submit_status(), 
      GetArenaForAllocation());
  }
  trading_day_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    trading_day_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trading_day().empty()) {
    trading_day_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trading_day(), 
      GetArenaForAllocation());
  }
  order_sys_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_sys_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_sys_id().empty()) {
    order_sys_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_sys_id(), 
      GetArenaForAllocation());
  }
  order_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_source().empty()) {
    order_source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_source(), 
      GetArenaForAllocation());
  }
  order_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_status().empty()) {
    order_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_status(), 
      GetArenaForAllocation());
  }
  order_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_type().empty()) {
    order_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_type(), 
      GetArenaForAllocation());
  }
  insert_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    insert_date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_insert_date().empty()) {
    insert_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_insert_date(), 
      GetArenaForAllocation());
  }
  insert_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    insert_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_insert_time().empty()) {
    insert_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_insert_time(), 
      GetArenaForAllocation());
  }
  active_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    active_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_active_time().empty()) {
    active_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_active_time(), 
      GetArenaForAllocation());
  }
  suspend_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    suspend_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_suspend_time().empty()) {
    suspend_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_suspend_time(), 
      GetArenaForAllocation());
  }
  update_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    update_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_update_time().empty()) {
    update_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_update_time(), 
      GetArenaForAllocation());
  }
  cancel_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cancel_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cancel_time().empty()) {
    cancel_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cancel_time(), 
      GetArenaForAllocation());
  }
  active_trader_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    active_trader_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_active_trader_id().empty()) {
    active_trader_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_active_trader_id(), 
      GetArenaForAllocation());
  }
  clearing_part_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    clearing_part_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_clearing_part_id().empty()) {
    clearing_part_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clearing_part_id(), 
      GetArenaForAllocation());
  }
  user_product_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_product_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_product_info().empty()) {
    user_product_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_product_info(), 
      GetArenaForAllocation());
  }
  status_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    status_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status_msg().empty()) {
    status_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status_msg(), 
      GetArenaForAllocation());
  }
  active_user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    active_user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_active_user_id().empty()) {
    active_user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_active_user_id(), 
      GetArenaForAllocation());
  }
  relative_order_sys_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    relative_order_sys_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_relative_order_sys_id().empty()) {
    relative_order_sys_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_relative_order_sys_id(), 
      GetArenaForAllocation());
  }
  branch_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    branch_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_branch_id().empty()) {
    branch_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_branch_id(), 
      GetArenaForAllocation());
  }
  invest_unit_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    invest_unit_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invest_unit_id().empty()) {
    invest_unit_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invest_unit_id(), 
      GetArenaForAllocation());
  }
  account_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    account_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_account_id().empty()) {
    account_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_account_id(), 
      GetArenaForAllocation());
  }
  currency_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    currency_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_currency_id().empty()) {
    currency_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currency_id(), 
      GetArenaForAllocation());
  }
  reserve_3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reserve_3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reserve_3().empty()) {
    reserve_3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reserve_3(), 
      GetArenaForAllocation());
  }
  mac_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mac_address().empty()) {
    mac_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac_address(), 
      GetArenaForAllocation());
  }
  instrument_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    instrument_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instrument_id().empty()) {
    instrument_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instrument_id(), 
      GetArenaForAllocation());
  }
  exchange_inst_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    exchange_inst_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_exchange_inst_id().empty()) {
    exchange_inst_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_exchange_inst_id(), 
      GetArenaForAllocation());
  }
  ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip_address().empty()) {
    ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip_address(), 
      GetArenaForAllocation());
  }
  direction_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    direction_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_direction_zn().empty()) {
    direction_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_direction_zn(), 
      GetArenaForAllocation());
  }
  order_status_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_status_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_status_zn().empty()) {
    order_status_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_status_zn(), 
      GetArenaForAllocation());
  }
  status_msg_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    status_msg_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status_msg_zn().empty()) {
    status_msg_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status_msg_zn(), 
      GetArenaForAllocation());
  }
  comb_offset_flag_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comb_offset_flag_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comb_offset_flag_zn().empty()) {
    comb_offset_flag_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comb_offset_flag_zn(), 
      GetArenaForAllocation());
  }
  ::memcpy(&limit_price_, &from.limit_price_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_swap_order_) -
    reinterpret_cast<char*>(&limit_price_)) + sizeof(is_swap_order_));
  // @@protoc_insertion_point(copy_constructor:OrderInfo)
}

inline void OrderInfo::SharedCtor() {
broker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  broker_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
investor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  investor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reserve_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reserve_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_price_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_price_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
direction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  direction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
comb_offset_flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comb_offset_flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
comb_hedge_flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comb_hedge_flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
time_condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  time_condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
gtd_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  gtd_date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
volume_condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  volume_condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contingent_condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contingent_condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
force_close_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  force_close_reason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
business_unit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  business_unit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_local_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
exchange_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  exchange_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
participant_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  participant_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reserve_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reserve_2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
trader_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  trader_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_submit_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_submit_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
trading_day_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  trading_day_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_sys_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_sys_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
insert_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  insert_date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
insert_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  insert_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
active_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  active_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
suspend_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  suspend_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
update_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  update_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cancel_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cancel_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
active_trader_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  active_trader_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
clearing_part_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clearing_part_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_product_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_product_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  status_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
active_user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  active_user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
relative_order_sys_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  relative_order_sys_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
branch_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  branch_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
invest_unit_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  invest_unit_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
account_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  account_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
currency_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  currency_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reserve_3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reserve_3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mac_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
instrument_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  instrument_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
exchange_inst_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  exchange_inst_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
direction_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  direction_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_status_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_status_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_msg_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  status_msg_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
comb_offset_flag_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comb_offset_flag_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&limit_price_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_swap_order_) -
    reinterpret_cast<char*>(&limit_price_)) + sizeof(is_swap_order_));
}

OrderInfo::~OrderInfo() {
  // @@protoc_insertion_point(destructor:OrderInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OrderInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  broker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  investor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reserve_1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_ref_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_price_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  direction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comb_offset_flag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comb_hedge_flag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_condition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gtd_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  volume_condition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contingent_condition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  force_close_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  business_unit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_local_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  participant_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reserve_2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trader_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_submit_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trading_day_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_sys_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  insert_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  insert_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  suspend_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  update_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_trader_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clearing_part_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_product_info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  relative_order_sys_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  branch_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  invest_unit_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reserve_3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_inst_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  direction_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_status_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_msg_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comb_offset_flag_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OrderInfo::ArenaDtor(void* object) {
  OrderInfo* _this = reinterpret_cast< OrderInfo* >(object);
  (void)_this;
}
void OrderInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrderInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OrderInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmpty();
  investor_id_.ClearToEmpty();
  reserve_1_.ClearToEmpty();
  order_ref_.ClearToEmpty();
  user_id_.ClearToEmpty();
  order_price_type_.ClearToEmpty();
  direction_.ClearToEmpty();
  comb_offset_flag_.ClearToEmpty();
  comb_hedge_flag_.ClearToEmpty();
  time_condition_.ClearToEmpty();
  gtd_date_.ClearToEmpty();
  volume_condition_.ClearToEmpty();
  contingent_condition_.ClearToEmpty();
  force_close_reason_.ClearToEmpty();
  business_unit_.ClearToEmpty();
  order_local_id_.ClearToEmpty();
  exchange_id_.ClearToEmpty();
  participant_id_.ClearToEmpty();
  client_id_.ClearToEmpty();
  reserve_2_.ClearToEmpty();
  trader_id_.ClearToEmpty();
  order_submit_status_.ClearToEmpty();
  trading_day_.ClearToEmpty();
  order_sys_id_.ClearToEmpty();
  order_source_.ClearToEmpty();
  order_status_.ClearToEmpty();
  order_type_.ClearToEmpty();
  insert_date_.ClearToEmpty();
  insert_time_.ClearToEmpty();
  active_time_.ClearToEmpty();
  suspend_time_.ClearToEmpty();
  update_time_.ClearToEmpty();
  cancel_time_.ClearToEmpty();
  active_trader_id_.ClearToEmpty();
  clearing_part_id_.ClearToEmpty();
  user_product_info_.ClearToEmpty();
  status_msg_.ClearToEmpty();
  active_user_id_.ClearToEmpty();
  relative_order_sys_id_.ClearToEmpty();
  branch_id_.ClearToEmpty();
  invest_unit_id_.ClearToEmpty();
  account_id_.ClearToEmpty();
  currency_id_.ClearToEmpty();
  reserve_3_.ClearToEmpty();
  mac_address_.ClearToEmpty();
  instrument_id_.ClearToEmpty();
  exchange_inst_id_.ClearToEmpty();
  ip_address_.ClearToEmpty();
  direction_zn_.ClearToEmpty();
  order_status_zn_.ClearToEmpty();
  status_msg_zn_.ClearToEmpty();
  comb_offset_flag_zn_.ClearToEmpty();
  ::memset(&limit_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_swap_order_) -
      reinterpret_cast<char*>(&limit_price_)) + sizeof(is_swap_order_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string broker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_broker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.broker_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string investor_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_investor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.investor_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reserve_1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_reserve_1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.reserve_1"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_ref = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_order_ref();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_ref"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.user_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_price_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_order_price_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_price_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string direction = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_direction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.direction"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comb_offset_flag = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_comb_offset_flag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.comb_offset_flag"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comb_hedge_flag = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_comb_hedge_flag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.comb_hedge_flag"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double limit_price = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          limit_price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int32 volume_total_original = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          volume_total_original_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string time_condition = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_time_condition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.time_condition"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string gtd_date = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_gtd_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.gtd_date"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string volume_condition = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_volume_condition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.volume_condition"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 min_volume = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          min_volume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contingent_condition = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          auto str = _internal_mutable_contingent_condition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.contingent_condition"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double stop_price = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 137)) {
          stop_price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string force_close_reason = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          auto str = _internal_mutable_force_close_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.force_close_reason"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 is_auto_suspend = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          is_auto_suspend_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string business_unit = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          auto str = _internal_mutable_business_unit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.business_unit"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 request_id = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_local_id = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          auto str = _internal_mutable_order_local_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_local_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string exchange_id = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_exchange_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.exchange_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string participant_id = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          auto str = _internal_mutable_participant_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.participant_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string client_id = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.client_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reserve_2 = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          auto str = _internal_mutable_reserve_2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.reserve_2"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string trader_id = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          auto str = _internal_mutable_trader_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.trader_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 install_id = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          install_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_submit_status = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          auto str = _internal_mutable_order_submit_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_submit_status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 notify_sequence = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          notify_sequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string trading_day = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          auto str = _internal_mutable_trading_day();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.trading_day"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 settlement_id = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          settlement_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_sys_id = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_sys_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_sys_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_source = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_order_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_source"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_status = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_order_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_type = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_order_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 volume_traded = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          volume_traded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 volume_total = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          volume_total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string insert_date = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_insert_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.insert_date"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string insert_time = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_insert_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.insert_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string active_time = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_active_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.active_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string suspend_time = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_suspend_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.suspend_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string update_time = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_update_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.update_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cancel_time = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_cancel_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.cancel_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string active_trader_id = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_active_trader_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.active_trader_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string clearing_part_id = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_clearing_part_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.clearing_part_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 sequence_no = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          sequence_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 front_id = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          front_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 session_id = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user_product_info = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          auto str = _internal_mutable_user_product_info();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.user_product_info"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status_msg = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          auto str = _internal_mutable_status_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.status_msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 user_force_close = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          user_force_close_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string active_user_id = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          auto str = _internal_mutable_active_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.active_user_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 broker_order_seq = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          broker_order_seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string relative_order_sys_id = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_relative_order_sys_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.relative_order_sys_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 zce_total_traded_volume = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          zce_total_traded_volume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 is_swap_order = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          is_swap_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string branch_id = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          auto str = _internal_mutable_branch_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.branch_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string invest_unit_id = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          auto str = _internal_mutable_invest_unit_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.invest_unit_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string account_id = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          auto str = _internal_mutable_account_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.account_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string currency_id = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          auto str = _internal_mutable_currency_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.currency_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reserve_3 = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          auto str = _internal_mutable_reserve_3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.reserve_3"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mac_address = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          auto str = _internal_mutable_mac_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.mac_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string instrument_id = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          auto str = _internal_mutable_instrument_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.instrument_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string exchange_inst_id = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_exchange_inst_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.exchange_inst_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ip_address = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.ip_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string direction_zn = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_direction_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.direction_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_status_zn = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_order_status_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.order_status_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status_msg_zn = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_status_msg_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.status_msg_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comb_offset_flag_zn = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_comb_offset_flag_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderInfo.comb_offset_flag_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrderInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (!this->_internal_broker_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_broker_id().data(), static_cast<int>(this->_internal_broker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.broker_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_broker_id(), target);
  }

  // string investor_id = 2;
  if (!this->_internal_investor_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_investor_id().data(), static_cast<int>(this->_internal_investor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.investor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_investor_id(), target);
  }

  // string reserve_1 = 3;
  if (!this->_internal_reserve_1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reserve_1().data(), static_cast<int>(this->_internal_reserve_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.reserve_1");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reserve_1(), target);
  }

  // string order_ref = 4;
  if (!this->_internal_order_ref().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_ref().data(), static_cast<int>(this->_internal_order_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_ref");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_order_ref(), target);
  }

  // string user_id = 5;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.user_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_user_id(), target);
  }

  // string order_price_type = 6;
  if (!this->_internal_order_price_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_price_type().data(), static_cast<int>(this->_internal_order_price_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_price_type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_order_price_type(), target);
  }

  // string direction = 7;
  if (!this->_internal_direction().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_direction().data(), static_cast<int>(this->_internal_direction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.direction");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_direction(), target);
  }

  // string comb_offset_flag = 8;
  if (!this->_internal_comb_offset_flag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comb_offset_flag().data(), static_cast<int>(this->_internal_comb_offset_flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.comb_offset_flag");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_comb_offset_flag(), target);
  }

  // string comb_hedge_flag = 9;
  if (!this->_internal_comb_hedge_flag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comb_hedge_flag().data(), static_cast<int>(this->_internal_comb_hedge_flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.comb_hedge_flag");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_comb_hedge_flag(), target);
  }

  // double limit_price = 10;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_limit_price = this->_internal_limit_price();
  uint64_t raw_limit_price;
  memcpy(&raw_limit_price, &tmp_limit_price, sizeof(tmp_limit_price));
  if (raw_limit_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_limit_price(), target);
  }

  // int32 volume_total_original = 11;
  if (this->_internal_volume_total_original() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_volume_total_original(), target);
  }

  // string time_condition = 12;
  if (!this->_internal_time_condition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_time_condition().data(), static_cast<int>(this->_internal_time_condition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.time_condition");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_time_condition(), target);
  }

  // string gtd_date = 13;
  if (!this->_internal_gtd_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gtd_date().data(), static_cast<int>(this->_internal_gtd_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.gtd_date");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_gtd_date(), target);
  }

  // string volume_condition = 14;
  if (!this->_internal_volume_condition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volume_condition().data(), static_cast<int>(this->_internal_volume_condition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.volume_condition");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_volume_condition(), target);
  }

  // int32 min_volume = 15;
  if (this->_internal_min_volume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_min_volume(), target);
  }

  // string contingent_condition = 16;
  if (!this->_internal_contingent_condition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contingent_condition().data(), static_cast<int>(this->_internal_contingent_condition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.contingent_condition");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_contingent_condition(), target);
  }

  // double stop_price = 17;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_stop_price = this->_internal_stop_price();
  uint64_t raw_stop_price;
  memcpy(&raw_stop_price, &tmp_stop_price, sizeof(tmp_stop_price));
  if (raw_stop_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(17, this->_internal_stop_price(), target);
  }

  // string force_close_reason = 18;
  if (!this->_internal_force_close_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_force_close_reason().data(), static_cast<int>(this->_internal_force_close_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.force_close_reason");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_force_close_reason(), target);
  }

  // int32 is_auto_suspend = 19;
  if (this->_internal_is_auto_suspend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_is_auto_suspend(), target);
  }

  // string business_unit = 20;
  if (!this->_internal_business_unit().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_business_unit().data(), static_cast<int>(this->_internal_business_unit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.business_unit");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_business_unit(), target);
  }

  // int32 request_id = 21;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(21, this->_internal_request_id(), target);
  }

  // string order_local_id = 22;
  if (!this->_internal_order_local_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_local_id().data(), static_cast<int>(this->_internal_order_local_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_local_id");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_order_local_id(), target);
  }

  // string exchange_id = 23;
  if (!this->_internal_exchange_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exchange_id().data(), static_cast<int>(this->_internal_exchange_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.exchange_id");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_exchange_id(), target);
  }

  // string participant_id = 24;
  if (!this->_internal_participant_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_participant_id().data(), static_cast<int>(this->_internal_participant_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.participant_id");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_participant_id(), target);
  }

  // string client_id = 25;
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.client_id");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_client_id(), target);
  }

  // string reserve_2 = 26;
  if (!this->_internal_reserve_2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reserve_2().data(), static_cast<int>(this->_internal_reserve_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.reserve_2");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_reserve_2(), target);
  }

  // string trader_id = 27;
  if (!this->_internal_trader_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trader_id().data(), static_cast<int>(this->_internal_trader_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.trader_id");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_trader_id(), target);
  }

  // int32 install_id = 28;
  if (this->_internal_install_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(28, this->_internal_install_id(), target);
  }

  // string order_submit_status = 29;
  if (!this->_internal_order_submit_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_submit_status().data(), static_cast<int>(this->_internal_order_submit_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_submit_status");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_order_submit_status(), target);
  }

  // int32 notify_sequence = 30;
  if (this->_internal_notify_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(30, this->_internal_notify_sequence(), target);
  }

  // string trading_day = 31;
  if (!this->_internal_trading_day().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trading_day().data(), static_cast<int>(this->_internal_trading_day().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.trading_day");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_trading_day(), target);
  }

  // int32 settlement_id = 32;
  if (this->_internal_settlement_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(32, this->_internal_settlement_id(), target);
  }

  // string order_sys_id = 33;
  if (!this->_internal_order_sys_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_sys_id().data(), static_cast<int>(this->_internal_order_sys_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_sys_id");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_order_sys_id(), target);
  }

  // string order_source = 34;
  if (!this->_internal_order_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_source().data(), static_cast<int>(this->_internal_order_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_source");
    target = stream->WriteStringMaybeAliased(
        34, this->_internal_order_source(), target);
  }

  // string order_status = 35;
  if (!this->_internal_order_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_status().data(), static_cast<int>(this->_internal_order_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_status");
    target = stream->WriteStringMaybeAliased(
        35, this->_internal_order_status(), target);
  }

  // string order_type = 36;
  if (!this->_internal_order_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_type().data(), static_cast<int>(this->_internal_order_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_type");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_order_type(), target);
  }

  // int32 volume_traded = 37;
  if (this->_internal_volume_traded() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(37, this->_internal_volume_traded(), target);
  }

  // int32 volume_total = 38;
  if (this->_internal_volume_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(38, this->_internal_volume_total(), target);
  }

  // string insert_date = 39;
  if (!this->_internal_insert_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_insert_date().data(), static_cast<int>(this->_internal_insert_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.insert_date");
    target = stream->WriteStringMaybeAliased(
        39, this->_internal_insert_date(), target);
  }

  // string insert_time = 40;
  if (!this->_internal_insert_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_insert_time().data(), static_cast<int>(this->_internal_insert_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.insert_time");
    target = stream->WriteStringMaybeAliased(
        40, this->_internal_insert_time(), target);
  }

  // string active_time = 41;
  if (!this->_internal_active_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_active_time().data(), static_cast<int>(this->_internal_active_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.active_time");
    target = stream->WriteStringMaybeAliased(
        41, this->_internal_active_time(), target);
  }

  // string suspend_time = 42;
  if (!this->_internal_suspend_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_suspend_time().data(), static_cast<int>(this->_internal_suspend_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.suspend_time");
    target = stream->WriteStringMaybeAliased(
        42, this->_internal_suspend_time(), target);
  }

  // string update_time = 43;
  if (!this->_internal_update_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_time().data(), static_cast<int>(this->_internal_update_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.update_time");
    target = stream->WriteStringMaybeAliased(
        43, this->_internal_update_time(), target);
  }

  // string cancel_time = 44;
  if (!this->_internal_cancel_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cancel_time().data(), static_cast<int>(this->_internal_cancel_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.cancel_time");
    target = stream->WriteStringMaybeAliased(
        44, this->_internal_cancel_time(), target);
  }

  // string active_trader_id = 45;
  if (!this->_internal_active_trader_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_active_trader_id().data(), static_cast<int>(this->_internal_active_trader_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.active_trader_id");
    target = stream->WriteStringMaybeAliased(
        45, this->_internal_active_trader_id(), target);
  }

  // string clearing_part_id = 46;
  if (!this->_internal_clearing_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clearing_part_id().data(), static_cast<int>(this->_internal_clearing_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.clearing_part_id");
    target = stream->WriteStringMaybeAliased(
        46, this->_internal_clearing_part_id(), target);
  }

  // int32 sequence_no = 47;
  if (this->_internal_sequence_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(47, this->_internal_sequence_no(), target);
  }

  // int32 front_id = 48;
  if (this->_internal_front_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(48, this->_internal_front_id(), target);
  }

  // int32 session_id = 49;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(49, this->_internal_session_id(), target);
  }

  // string user_product_info = 50;
  if (!this->_internal_user_product_info().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_product_info().data(), static_cast<int>(this->_internal_user_product_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.user_product_info");
    target = stream->WriteStringMaybeAliased(
        50, this->_internal_user_product_info(), target);
  }

  // string status_msg = 51;
  if (!this->_internal_status_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status_msg().data(), static_cast<int>(this->_internal_status_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.status_msg");
    target = stream->WriteStringMaybeAliased(
        51, this->_internal_status_msg(), target);
  }

  // int32 user_force_close = 52;
  if (this->_internal_user_force_close() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(52, this->_internal_user_force_close(), target);
  }

  // string active_user_id = 53;
  if (!this->_internal_active_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_active_user_id().data(), static_cast<int>(this->_internal_active_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.active_user_id");
    target = stream->WriteStringMaybeAliased(
        53, this->_internal_active_user_id(), target);
  }

  // int32 broker_order_seq = 54;
  if (this->_internal_broker_order_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(54, this->_internal_broker_order_seq(), target);
  }

  // string relative_order_sys_id = 55;
  if (!this->_internal_relative_order_sys_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_relative_order_sys_id().data(), static_cast<int>(this->_internal_relative_order_sys_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.relative_order_sys_id");
    target = stream->WriteStringMaybeAliased(
        55, this->_internal_relative_order_sys_id(), target);
  }

  // int32 zce_total_traded_volume = 56;
  if (this->_internal_zce_total_traded_volume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(56, this->_internal_zce_total_traded_volume(), target);
  }

  // int32 is_swap_order = 57;
  if (this->_internal_is_swap_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(57, this->_internal_is_swap_order(), target);
  }

  // string branch_id = 58;
  if (!this->_internal_branch_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_branch_id().data(), static_cast<int>(this->_internal_branch_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.branch_id");
    target = stream->WriteStringMaybeAliased(
        58, this->_internal_branch_id(), target);
  }

  // string invest_unit_id = 59;
  if (!this->_internal_invest_unit_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invest_unit_id().data(), static_cast<int>(this->_internal_invest_unit_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.invest_unit_id");
    target = stream->WriteStringMaybeAliased(
        59, this->_internal_invest_unit_id(), target);
  }

  // string account_id = 60;
  if (!this->_internal_account_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account_id().data(), static_cast<int>(this->_internal_account_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.account_id");
    target = stream->WriteStringMaybeAliased(
        60, this->_internal_account_id(), target);
  }

  // string currency_id = 61;
  if (!this->_internal_currency_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency_id().data(), static_cast<int>(this->_internal_currency_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.currency_id");
    target = stream->WriteStringMaybeAliased(
        61, this->_internal_currency_id(), target);
  }

  // string reserve_3 = 62;
  if (!this->_internal_reserve_3().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reserve_3().data(), static_cast<int>(this->_internal_reserve_3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.reserve_3");
    target = stream->WriteStringMaybeAliased(
        62, this->_internal_reserve_3(), target);
  }

  // string mac_address = 63;
  if (!this->_internal_mac_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac_address().data(), static_cast<int>(this->_internal_mac_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.mac_address");
    target = stream->WriteStringMaybeAliased(
        63, this->_internal_mac_address(), target);
  }

  // string instrument_id = 64;
  if (!this->_internal_instrument_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instrument_id().data(), static_cast<int>(this->_internal_instrument_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.instrument_id");
    target = stream->WriteStringMaybeAliased(
        64, this->_internal_instrument_id(), target);
  }

  // string exchange_inst_id = 65;
  if (!this->_internal_exchange_inst_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exchange_inst_id().data(), static_cast<int>(this->_internal_exchange_inst_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.exchange_inst_id");
    target = stream->WriteStringMaybeAliased(
        65, this->_internal_exchange_inst_id(), target);
  }

  // string ip_address = 66;
  if (!this->_internal_ip_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip_address().data(), static_cast<int>(this->_internal_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.ip_address");
    target = stream->WriteStringMaybeAliased(
        66, this->_internal_ip_address(), target);
  }

  // string direction_zn = 67;
  if (!this->_internal_direction_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_direction_zn().data(), static_cast<int>(this->_internal_direction_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.direction_zn");
    target = stream->WriteStringMaybeAliased(
        67, this->_internal_direction_zn(), target);
  }

  // string order_status_zn = 68;
  if (!this->_internal_order_status_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_status_zn().data(), static_cast<int>(this->_internal_order_status_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.order_status_zn");
    target = stream->WriteStringMaybeAliased(
        68, this->_internal_order_status_zn(), target);
  }

  // string status_msg_zn = 69;
  if (!this->_internal_status_msg_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status_msg_zn().data(), static_cast<int>(this->_internal_status_msg_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.status_msg_zn");
    target = stream->WriteStringMaybeAliased(
        69, this->_internal_status_msg_zn(), target);
  }

  // string comb_offset_flag_zn = 70;
  if (!this->_internal_comb_offset_flag_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comb_offset_flag_zn().data(), static_cast<int>(this->_internal_comb_offset_flag_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderInfo.comb_offset_flag_zn");
    target = stream->WriteStringMaybeAliased(
        70, this->_internal_comb_offset_flag_zn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrderInfo)
  return target;
}

size_t OrderInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrderInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string broker_id = 1;
  if (!this->_internal_broker_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_broker_id());
  }

  // string investor_id = 2;
  if (!this->_internal_investor_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_investor_id());
  }

  // string reserve_1 = 3;
  if (!this->_internal_reserve_1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reserve_1());
  }

  // string order_ref = 4;
  if (!this->_internal_order_ref().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_ref());
  }

  // string user_id = 5;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string order_price_type = 6;
  if (!this->_internal_order_price_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_price_type());
  }

  // string direction = 7;
  if (!this->_internal_direction().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_direction());
  }

  // string comb_offset_flag = 8;
  if (!this->_internal_comb_offset_flag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comb_offset_flag());
  }

  // string comb_hedge_flag = 9;
  if (!this->_internal_comb_hedge_flag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comb_hedge_flag());
  }

  // string time_condition = 12;
  if (!this->_internal_time_condition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_time_condition());
  }

  // string gtd_date = 13;
  if (!this->_internal_gtd_date().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gtd_date());
  }

  // string volume_condition = 14;
  if (!this->_internal_volume_condition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volume_condition());
  }

  // string contingent_condition = 16;
  if (!this->_internal_contingent_condition().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contingent_condition());
  }

  // string force_close_reason = 18;
  if (!this->_internal_force_close_reason().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_force_close_reason());
  }

  // string business_unit = 20;
  if (!this->_internal_business_unit().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_business_unit());
  }

  // string order_local_id = 22;
  if (!this->_internal_order_local_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_local_id());
  }

  // string exchange_id = 23;
  if (!this->_internal_exchange_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exchange_id());
  }

  // string participant_id = 24;
  if (!this->_internal_participant_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_participant_id());
  }

  // string client_id = 25;
  if (!this->_internal_client_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string reserve_2 = 26;
  if (!this->_internal_reserve_2().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reserve_2());
  }

  // string trader_id = 27;
  if (!this->_internal_trader_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trader_id());
  }

  // string order_submit_status = 29;
  if (!this->_internal_order_submit_status().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_submit_status());
  }

  // string trading_day = 31;
  if (!this->_internal_trading_day().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trading_day());
  }

  // string order_sys_id = 33;
  if (!this->_internal_order_sys_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_sys_id());
  }

  // string order_source = 34;
  if (!this->_internal_order_source().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_source());
  }

  // string order_status = 35;
  if (!this->_internal_order_status().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_status());
  }

  // string order_type = 36;
  if (!this->_internal_order_type().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_type());
  }

  // string insert_date = 39;
  if (!this->_internal_insert_date().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_insert_date());
  }

  // string insert_time = 40;
  if (!this->_internal_insert_time().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_insert_time());
  }

  // string active_time = 41;
  if (!this->_internal_active_time().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_active_time());
  }

  // string suspend_time = 42;
  if (!this->_internal_suspend_time().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_suspend_time());
  }

  // string update_time = 43;
  if (!this->_internal_update_time().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_update_time());
  }

  // string cancel_time = 44;
  if (!this->_internal_cancel_time().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cancel_time());
  }

  // string active_trader_id = 45;
  if (!this->_internal_active_trader_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_active_trader_id());
  }

  // string clearing_part_id = 46;
  if (!this->_internal_clearing_part_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clearing_part_id());
  }

  // string user_product_info = 50;
  if (!this->_internal_user_product_info().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_product_info());
  }

  // string status_msg = 51;
  if (!this->_internal_status_msg().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status_msg());
  }

  // string active_user_id = 53;
  if (!this->_internal_active_user_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_active_user_id());
  }

  // string relative_order_sys_id = 55;
  if (!this->_internal_relative_order_sys_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_relative_order_sys_id());
  }

  // string branch_id = 58;
  if (!this->_internal_branch_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_branch_id());
  }

  // string invest_unit_id = 59;
  if (!this->_internal_invest_unit_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invest_unit_id());
  }

  // string account_id = 60;
  if (!this->_internal_account_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account_id());
  }

  // string currency_id = 61;
  if (!this->_internal_currency_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency_id());
  }

  // string reserve_3 = 62;
  if (!this->_internal_reserve_3().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reserve_3());
  }

  // string mac_address = 63;
  if (!this->_internal_mac_address().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac_address());
  }

  // string instrument_id = 64;
  if (!this->_internal_instrument_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instrument_id());
  }

  // string exchange_inst_id = 65;
  if (!this->_internal_exchange_inst_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exchange_inst_id());
  }

  // string ip_address = 66;
  if (!this->_internal_ip_address().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip_address());
  }

  // string direction_zn = 67;
  if (!this->_internal_direction_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_direction_zn());
  }

  // string order_status_zn = 68;
  if (!this->_internal_order_status_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_status_zn());
  }

  // string status_msg_zn = 69;
  if (!this->_internal_status_msg_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status_msg_zn());
  }

  // string comb_offset_flag_zn = 70;
  if (!this->_internal_comb_offset_flag_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comb_offset_flag_zn());
  }

  // double limit_price = 10;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_limit_price = this->_internal_limit_price();
  uint64_t raw_limit_price;
  memcpy(&raw_limit_price, &tmp_limit_price, sizeof(tmp_limit_price));
  if (raw_limit_price != 0) {
    total_size += 1 + 8;
  }

  // int32 volume_total_original = 11;
  if (this->_internal_volume_total_original() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_volume_total_original());
  }

  // int32 min_volume = 15;
  if (this->_internal_min_volume() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_min_volume());
  }

  // double stop_price = 17;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_stop_price = this->_internal_stop_price();
  uint64_t raw_stop_price;
  memcpy(&raw_stop_price, &tmp_stop_price, sizeof(tmp_stop_price));
  if (raw_stop_price != 0) {
    total_size += 2 + 8;
  }

  // int32 is_auto_suspend = 19;
  if (this->_internal_is_auto_suspend() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_is_auto_suspend());
  }

  // int32 request_id = 21;
  if (this->_internal_request_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request_id());
  }

  // int32 install_id = 28;
  if (this->_internal_install_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_install_id());
  }

  // int32 notify_sequence = 30;
  if (this->_internal_notify_sequence() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_notify_sequence());
  }

  // int32 settlement_id = 32;
  if (this->_internal_settlement_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_settlement_id());
  }

  // int32 volume_traded = 37;
  if (this->_internal_volume_traded() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_volume_traded());
  }

  // int32 volume_total = 38;
  if (this->_internal_volume_total() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_volume_total());
  }

  // int32 sequence_no = 47;
  if (this->_internal_sequence_no() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sequence_no());
  }

  // int32 front_id = 48;
  if (this->_internal_front_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_front_id());
  }

  // int32 session_id = 49;
  if (this->_internal_session_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_session_id());
  }

  // int32 user_force_close = 52;
  if (this->_internal_user_force_close() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_user_force_close());
  }

  // int32 broker_order_seq = 54;
  if (this->_internal_broker_order_seq() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_broker_order_seq());
  }

  // int32 zce_total_traded_volume = 56;
  if (this->_internal_zce_total_traded_volume() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_zce_total_traded_volume());
  }

  // int32 is_swap_order = 57;
  if (this->_internal_is_swap_order() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_is_swap_order());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrderInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderInfo::GetClassData() const { return &_class_data_; }

void OrderInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrderInfo *>(to)->MergeFrom(
      static_cast<const OrderInfo &>(from));
}


void OrderInfo::MergeFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_broker_id().empty()) {
    _internal_set_broker_id(from._internal_broker_id());
  }
  if (!from._internal_investor_id().empty()) {
    _internal_set_investor_id(from._internal_investor_id());
  }
  if (!from._internal_reserve_1().empty()) {
    _internal_set_reserve_1(from._internal_reserve_1());
  }
  if (!from._internal_order_ref().empty()) {
    _internal_set_order_ref(from._internal_order_ref());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_order_price_type().empty()) {
    _internal_set_order_price_type(from._internal_order_price_type());
  }
  if (!from._internal_direction().empty()) {
    _internal_set_direction(from._internal_direction());
  }
  if (!from._internal_comb_offset_flag().empty()) {
    _internal_set_comb_offset_flag(from._internal_comb_offset_flag());
  }
  if (!from._internal_comb_hedge_flag().empty()) {
    _internal_set_comb_hedge_flag(from._internal_comb_hedge_flag());
  }
  if (!from._internal_time_condition().empty()) {
    _internal_set_time_condition(from._internal_time_condition());
  }
  if (!from._internal_gtd_date().empty()) {
    _internal_set_gtd_date(from._internal_gtd_date());
  }
  if (!from._internal_volume_condition().empty()) {
    _internal_set_volume_condition(from._internal_volume_condition());
  }
  if (!from._internal_contingent_condition().empty()) {
    _internal_set_contingent_condition(from._internal_contingent_condition());
  }
  if (!from._internal_force_close_reason().empty()) {
    _internal_set_force_close_reason(from._internal_force_close_reason());
  }
  if (!from._internal_business_unit().empty()) {
    _internal_set_business_unit(from._internal_business_unit());
  }
  if (!from._internal_order_local_id().empty()) {
    _internal_set_order_local_id(from._internal_order_local_id());
  }
  if (!from._internal_exchange_id().empty()) {
    _internal_set_exchange_id(from._internal_exchange_id());
  }
  if (!from._internal_participant_id().empty()) {
    _internal_set_participant_id(from._internal_participant_id());
  }
  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_reserve_2().empty()) {
    _internal_set_reserve_2(from._internal_reserve_2());
  }
  if (!from._internal_trader_id().empty()) {
    _internal_set_trader_id(from._internal_trader_id());
  }
  if (!from._internal_order_submit_status().empty()) {
    _internal_set_order_submit_status(from._internal_order_submit_status());
  }
  if (!from._internal_trading_day().empty()) {
    _internal_set_trading_day(from._internal_trading_day());
  }
  if (!from._internal_order_sys_id().empty()) {
    _internal_set_order_sys_id(from._internal_order_sys_id());
  }
  if (!from._internal_order_source().empty()) {
    _internal_set_order_source(from._internal_order_source());
  }
  if (!from._internal_order_status().empty()) {
    _internal_set_order_status(from._internal_order_status());
  }
  if (!from._internal_order_type().empty()) {
    _internal_set_order_type(from._internal_order_type());
  }
  if (!from._internal_insert_date().empty()) {
    _internal_set_insert_date(from._internal_insert_date());
  }
  if (!from._internal_insert_time().empty()) {
    _internal_set_insert_time(from._internal_insert_time());
  }
  if (!from._internal_active_time().empty()) {
    _internal_set_active_time(from._internal_active_time());
  }
  if (!from._internal_suspend_time().empty()) {
    _internal_set_suspend_time(from._internal_suspend_time());
  }
  if (!from._internal_update_time().empty()) {
    _internal_set_update_time(from._internal_update_time());
  }
  if (!from._internal_cancel_time().empty()) {
    _internal_set_cancel_time(from._internal_cancel_time());
  }
  if (!from._internal_active_trader_id().empty()) {
    _internal_set_active_trader_id(from._internal_active_trader_id());
  }
  if (!from._internal_clearing_part_id().empty()) {
    _internal_set_clearing_part_id(from._internal_clearing_part_id());
  }
  if (!from._internal_user_product_info().empty()) {
    _internal_set_user_product_info(from._internal_user_product_info());
  }
  if (!from._internal_status_msg().empty()) {
    _internal_set_status_msg(from._internal_status_msg());
  }
  if (!from._internal_active_user_id().empty()) {
    _internal_set_active_user_id(from._internal_active_user_id());
  }
  if (!from._internal_relative_order_sys_id().empty()) {
    _internal_set_relative_order_sys_id(from._internal_relative_order_sys_id());
  }
  if (!from._internal_branch_id().empty()) {
    _internal_set_branch_id(from._internal_branch_id());
  }
  if (!from._internal_invest_unit_id().empty()) {
    _internal_set_invest_unit_id(from._internal_invest_unit_id());
  }
  if (!from._internal_account_id().empty()) {
    _internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_currency_id().empty()) {
    _internal_set_currency_id(from._internal_currency_id());
  }
  if (!from._internal_reserve_3().empty()) {
    _internal_set_reserve_3(from._internal_reserve_3());
  }
  if (!from._internal_mac_address().empty()) {
    _internal_set_mac_address(from._internal_mac_address());
  }
  if (!from._internal_instrument_id().empty()) {
    _internal_set_instrument_id(from._internal_instrument_id());
  }
  if (!from._internal_exchange_inst_id().empty()) {
    _internal_set_exchange_inst_id(from._internal_exchange_inst_id());
  }
  if (!from._internal_ip_address().empty()) {
    _internal_set_ip_address(from._internal_ip_address());
  }
  if (!from._internal_direction_zn().empty()) {
    _internal_set_direction_zn(from._internal_direction_zn());
  }
  if (!from._internal_order_status_zn().empty()) {
    _internal_set_order_status_zn(from._internal_order_status_zn());
  }
  if (!from._internal_status_msg_zn().empty()) {
    _internal_set_status_msg_zn(from._internal_status_msg_zn());
  }
  if (!from._internal_comb_offset_flag_zn().empty()) {
    _internal_set_comb_offset_flag_zn(from._internal_comb_offset_flag_zn());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_limit_price = from._internal_limit_price();
  uint64_t raw_limit_price;
  memcpy(&raw_limit_price, &tmp_limit_price, sizeof(tmp_limit_price));
  if (raw_limit_price != 0) {
    _internal_set_limit_price(from._internal_limit_price());
  }
  if (from._internal_volume_total_original() != 0) {
    _internal_set_volume_total_original(from._internal_volume_total_original());
  }
  if (from._internal_min_volume() != 0) {
    _internal_set_min_volume(from._internal_min_volume());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_stop_price = from._internal_stop_price();
  uint64_t raw_stop_price;
  memcpy(&raw_stop_price, &tmp_stop_price, sizeof(tmp_stop_price));
  if (raw_stop_price != 0) {
    _internal_set_stop_price(from._internal_stop_price());
  }
  if (from._internal_is_auto_suspend() != 0) {
    _internal_set_is_auto_suspend(from._internal_is_auto_suspend());
  }
  if (from._internal_request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_install_id() != 0) {
    _internal_set_install_id(from._internal_install_id());
  }
  if (from._internal_notify_sequence() != 0) {
    _internal_set_notify_sequence(from._internal_notify_sequence());
  }
  if (from._internal_settlement_id() != 0) {
    _internal_set_settlement_id(from._internal_settlement_id());
  }
  if (from._internal_volume_traded() != 0) {
    _internal_set_volume_traded(from._internal_volume_traded());
  }
  if (from._internal_volume_total() != 0) {
    _internal_set_volume_total(from._internal_volume_total());
  }
  if (from._internal_sequence_no() != 0) {
    _internal_set_sequence_no(from._internal_sequence_no());
  }
  if (from._internal_front_id() != 0) {
    _internal_set_front_id(from._internal_front_id());
  }
  if (from._internal_session_id() != 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_user_force_close() != 0) {
    _internal_set_user_force_close(from._internal_user_force_close());
  }
  if (from._internal_broker_order_seq() != 0) {
    _internal_set_broker_order_seq(from._internal_broker_order_seq());
  }
  if (from._internal_zce_total_traded_volume() != 0) {
    _internal_set_zce_total_traded_volume(from._internal_zce_total_traded_volume());
  }
  if (from._internal_is_swap_order() != 0) {
    _internal_set_is_swap_order(from._internal_is_swap_order());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderInfo::CopyFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfo::IsInitialized() const {
  return true;
}

void OrderInfo::InternalSwap(OrderInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &broker_id_, lhs_arena,
      &other->broker_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &investor_id_, lhs_arena,
      &other->investor_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reserve_1_, lhs_arena,
      &other->reserve_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_ref_, lhs_arena,
      &other->order_ref_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_price_type_, lhs_arena,
      &other->order_price_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &direction_, lhs_arena,
      &other->direction_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comb_offset_flag_, lhs_arena,
      &other->comb_offset_flag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comb_hedge_flag_, lhs_arena,
      &other->comb_hedge_flag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &time_condition_, lhs_arena,
      &other->time_condition_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &gtd_date_, lhs_arena,
      &other->gtd_date_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &volume_condition_, lhs_arena,
      &other->volume_condition_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contingent_condition_, lhs_arena,
      &other->contingent_condition_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &force_close_reason_, lhs_arena,
      &other->force_close_reason_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &business_unit_, lhs_arena,
      &other->business_unit_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_local_id_, lhs_arena,
      &other->order_local_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &exchange_id_, lhs_arena,
      &other->exchange_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &participant_id_, lhs_arena,
      &other->participant_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reserve_2_, lhs_arena,
      &other->reserve_2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &trader_id_, lhs_arena,
      &other->trader_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_submit_status_, lhs_arena,
      &other->order_submit_status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &trading_day_, lhs_arena,
      &other->trading_day_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_sys_id_, lhs_arena,
      &other->order_sys_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_source_, lhs_arena,
      &other->order_source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_status_, lhs_arena,
      &other->order_status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_type_, lhs_arena,
      &other->order_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &insert_date_, lhs_arena,
      &other->insert_date_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &insert_time_, lhs_arena,
      &other->insert_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &active_time_, lhs_arena,
      &other->active_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &suspend_time_, lhs_arena,
      &other->suspend_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &update_time_, lhs_arena,
      &other->update_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cancel_time_, lhs_arena,
      &other->cancel_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &active_trader_id_, lhs_arena,
      &other->active_trader_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &clearing_part_id_, lhs_arena,
      &other->clearing_part_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_product_info_, lhs_arena,
      &other->user_product_info_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_msg_, lhs_arena,
      &other->status_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &active_user_id_, lhs_arena,
      &other->active_user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &relative_order_sys_id_, lhs_arena,
      &other->relative_order_sys_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &branch_id_, lhs_arena,
      &other->branch_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invest_unit_id_, lhs_arena,
      &other->invest_unit_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &account_id_, lhs_arena,
      &other->account_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &currency_id_, lhs_arena,
      &other->currency_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reserve_3_, lhs_arena,
      &other->reserve_3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mac_address_, lhs_arena,
      &other->mac_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &instrument_id_, lhs_arena,
      &other->instrument_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &exchange_inst_id_, lhs_arena,
      &other->exchange_inst_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ip_address_, lhs_arena,
      &other->ip_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &direction_zn_, lhs_arena,
      &other->direction_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_status_zn_, lhs_arena,
      &other->order_status_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_msg_zn_, lhs_arena,
      &other->status_msg_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comb_offset_flag_zn_, lhs_arena,
      &other->comb_offset_flag_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderInfo, is_swap_order_)
      + sizeof(OrderInfo::is_swap_order_)
      - PROTOBUF_FIELD_OFFSET(OrderInfo, limit_price_)>(
          reinterpret_cast<char*>(&limit_price_),
          reinterpret_cast<char*>(&other->limit_price_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_order_2eproto_getter, &descriptor_table_order_2eproto_once,
      file_level_metadata_order_2eproto[0]);
}

// ===================================================================

class OrderActionInfo::_Internal {
 public:
};

OrderActionInfo::OrderActionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OrderActionInfo)
}
OrderActionInfo::OrderActionInfo(const OrderActionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    broker_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_broker_id().empty()) {
    broker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_broker_id(), 
      GetArenaForAllocation());
  }
  investor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    investor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_investor_id().empty()) {
    investor_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_investor_id(), 
      GetArenaForAllocation());
  }
  order_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_ref().empty()) {
    order_ref_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_ref(), 
      GetArenaForAllocation());
  }
  exchange_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    exchange_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_exchange_id().empty()) {
    exchange_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_exchange_id(), 
      GetArenaForAllocation());
  }
  order_sys_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_sys_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_sys_id().empty()) {
    order_sys_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_sys_id(), 
      GetArenaForAllocation());
  }
  action_flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    action_flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_action_flag().empty()) {
    action_flag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action_flag(), 
      GetArenaForAllocation());
  }
  action_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    action_date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_action_date().empty()) {
    action_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action_date(), 
      GetArenaForAllocation());
  }
  action_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    action_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_action_time().empty()) {
    action_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action_time(), 
      GetArenaForAllocation());
  }
  trader_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    trader_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trader_id().empty()) {
    trader_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trader_id(), 
      GetArenaForAllocation());
  }
  order_local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_local_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_local_id().empty()) {
    order_local_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_local_id(), 
      GetArenaForAllocation());
  }
  action_local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    action_local_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_action_local_id().empty()) {
    action_local_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action_local_id(), 
      GetArenaForAllocation());
  }
  participant_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    participant_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_participant_id().empty()) {
    participant_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_participant_id(), 
      GetArenaForAllocation());
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_client_id(), 
      GetArenaForAllocation());
  }
  business_unit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    business_unit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_business_unit().empty()) {
    business_unit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_business_unit(), 
      GetArenaForAllocation());
  }
  order_action_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_action_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_action_status().empty()) {
    order_action_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_action_status(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  status_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    status_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status_msg().empty()) {
    status_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status_msg(), 
      GetArenaForAllocation());
  }
  reserve_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reserve_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reserve_1().empty()) {
    reserve_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reserve_1(), 
      GetArenaForAllocation());
  }
  branch_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    branch_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_branch_id().empty()) {
    branch_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_branch_id(), 
      GetArenaForAllocation());
  }
  invest_unit_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    invest_unit_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invest_unit_id().empty()) {
    invest_unit_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invest_unit_id(), 
      GetArenaForAllocation());
  }
  reserve_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reserve_2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reserve_2().empty()) {
    reserve_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reserve_2(), 
      GetArenaForAllocation());
  }
  mac_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mac_address().empty()) {
    mac_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac_address(), 
      GetArenaForAllocation());
  }
  instrument_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    instrument_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instrument_id().empty()) {
    instrument_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instrument_id(), 
      GetArenaForAllocation());
  }
  ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip_address().empty()) {
    ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip_address(), 
      GetArenaForAllocation());
  }
  direction_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    direction_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_direction_zn().empty()) {
    direction_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_direction_zn(), 
      GetArenaForAllocation());
  }
  order_status_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_status_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_status_zn().empty()) {
    order_status_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_status_zn(), 
      GetArenaForAllocation());
  }
  comb_offset_flag_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comb_offset_flag_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comb_offset_flag_zn().empty()) {
    comb_offset_flag_zn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comb_offset_flag_zn(), 
      GetArenaForAllocation());
  }
  ::memcpy(&order_action_ref_, &from.order_action_ref_,
    static_cast<size_t>(reinterpret_cast<char*>(&install_id_) -
    reinterpret_cast<char*>(&order_action_ref_)) + sizeof(install_id_));
  // @@protoc_insertion_point(copy_constructor:OrderActionInfo)
}

inline void OrderActionInfo::SharedCtor() {
broker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  broker_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
investor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  investor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
exchange_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  exchange_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_sys_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_sys_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
action_flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  action_flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
action_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  action_date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
action_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  action_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
trader_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  trader_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_local_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
action_local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  action_local_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
participant_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  participant_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
business_unit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  business_unit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_action_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_action_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  status_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reserve_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reserve_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
branch_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  branch_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
invest_unit_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  invest_unit_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reserve_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reserve_2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mac_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
instrument_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  instrument_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
direction_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  direction_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_status_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_status_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
comb_offset_flag_zn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comb_offset_flag_zn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&order_action_ref_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&install_id_) -
    reinterpret_cast<char*>(&order_action_ref_)) + sizeof(install_id_));
}

OrderActionInfo::~OrderActionInfo() {
  // @@protoc_insertion_point(destructor:OrderActionInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OrderActionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  broker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  investor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_ref_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_sys_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_flag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trader_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_local_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_local_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  participant_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  business_unit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_action_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reserve_1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  branch_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  invest_unit_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reserve_2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  direction_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_status_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comb_offset_flag_zn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OrderActionInfo::ArenaDtor(void* object) {
  OrderActionInfo* _this = reinterpret_cast< OrderActionInfo* >(object);
  (void)_this;
}
void OrderActionInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrderActionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrderActionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OrderActionInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmpty();
  investor_id_.ClearToEmpty();
  order_ref_.ClearToEmpty();
  exchange_id_.ClearToEmpty();
  order_sys_id_.ClearToEmpty();
  action_flag_.ClearToEmpty();
  action_date_.ClearToEmpty();
  action_time_.ClearToEmpty();
  trader_id_.ClearToEmpty();
  order_local_id_.ClearToEmpty();
  action_local_id_.ClearToEmpty();
  participant_id_.ClearToEmpty();
  client_id_.ClearToEmpty();
  business_unit_.ClearToEmpty();
  order_action_status_.ClearToEmpty();
  user_id_.ClearToEmpty();
  status_msg_.ClearToEmpty();
  reserve_1_.ClearToEmpty();
  branch_id_.ClearToEmpty();
  invest_unit_id_.ClearToEmpty();
  reserve_2_.ClearToEmpty();
  mac_address_.ClearToEmpty();
  instrument_id_.ClearToEmpty();
  ip_address_.ClearToEmpty();
  direction_zn_.ClearToEmpty();
  order_status_zn_.ClearToEmpty();
  comb_offset_flag_zn_.ClearToEmpty();
  ::memset(&order_action_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&install_id_) -
      reinterpret_cast<char*>(&order_action_ref_)) + sizeof(install_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderActionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string broker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_broker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.broker_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string investor_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_investor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.investor_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 order_action_ref = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          order_action_ref_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_ref = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_order_ref();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.order_ref"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 request_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 front_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          front_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 session_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string exchange_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_exchange_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.exchange_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_sys_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_order_sys_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.order_sys_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string action_flag = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_action_flag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.action_flag"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double limit_price = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 89)) {
          limit_price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int32 volume_change = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          volume_change_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string action_date = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_action_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.action_date"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string action_time = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_action_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.action_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string trader_id = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_trader_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.trader_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 install_id = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          install_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_local_id = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          auto str = _internal_mutable_order_local_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.order_local_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string action_local_id = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          auto str = _internal_mutable_action_local_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.action_local_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string participant_id = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          auto str = _internal_mutable_participant_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.participant_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string client_id = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.client_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string business_unit = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          auto str = _internal_mutable_business_unit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.business_unit"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_action_status = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          auto str = _internal_mutable_order_action_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.order_action_status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user_id = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.user_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status_msg = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          auto str = _internal_mutable_status_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.status_msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reserve_1 = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          auto str = _internal_mutable_reserve_1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.reserve_1"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string branch_id = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          auto str = _internal_mutable_branch_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.branch_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string invest_unit_id = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          auto str = _internal_mutable_invest_unit_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.invest_unit_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reserve_2 = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          auto str = _internal_mutable_reserve_2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.reserve_2"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mac_address = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          auto str = _internal_mutable_mac_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.mac_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string instrument_id = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          auto str = _internal_mutable_instrument_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.instrument_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ip_address = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          auto str = _internal_mutable_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.ip_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string direction_zn = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          auto str = _internal_mutable_direction_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.direction_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order_status_zn = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_status_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.order_status_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comb_offset_flag_zn = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_comb_offset_flag_zn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OrderActionInfo.comb_offset_flag_zn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderActionInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrderActionInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (!this->_internal_broker_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_broker_id().data(), static_cast<int>(this->_internal_broker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.broker_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_broker_id(), target);
  }

  // string investor_id = 2;
  if (!this->_internal_investor_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_investor_id().data(), static_cast<int>(this->_internal_investor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.investor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_investor_id(), target);
  }

  // int32 order_action_ref = 3;
  if (this->_internal_order_action_ref() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_order_action_ref(), target);
  }

  // string order_ref = 4;
  if (!this->_internal_order_ref().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_ref().data(), static_cast<int>(this->_internal_order_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.order_ref");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_order_ref(), target);
  }

  // int32 request_id = 5;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_request_id(), target);
  }

  // int32 front_id = 6;
  if (this->_internal_front_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_front_id(), target);
  }

  // int32 session_id = 7;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_session_id(), target);
  }

  // string exchange_id = 8;
  if (!this->_internal_exchange_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exchange_id().data(), static_cast<int>(this->_internal_exchange_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.exchange_id");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_exchange_id(), target);
  }

  // string order_sys_id = 9;
  if (!this->_internal_order_sys_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_sys_id().data(), static_cast<int>(this->_internal_order_sys_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.order_sys_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_order_sys_id(), target);
  }

  // string action_flag = 10;
  if (!this->_internal_action_flag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action_flag().data(), static_cast<int>(this->_internal_action_flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.action_flag");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_action_flag(), target);
  }

  // double limit_price = 11;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_limit_price = this->_internal_limit_price();
  uint64_t raw_limit_price;
  memcpy(&raw_limit_price, &tmp_limit_price, sizeof(tmp_limit_price));
  if (raw_limit_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_limit_price(), target);
  }

  // int32 volume_change = 12;
  if (this->_internal_volume_change() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_volume_change(), target);
  }

  // string action_date = 13;
  if (!this->_internal_action_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action_date().data(), static_cast<int>(this->_internal_action_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.action_date");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_action_date(), target);
  }

  // string action_time = 14;
  if (!this->_internal_action_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action_time().data(), static_cast<int>(this->_internal_action_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.action_time");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_action_time(), target);
  }

  // string trader_id = 15;
  if (!this->_internal_trader_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trader_id().data(), static_cast<int>(this->_internal_trader_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.trader_id");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_trader_id(), target);
  }

  // int32 install_id = 16;
  if (this->_internal_install_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_install_id(), target);
  }

  // string order_local_id = 17;
  if (!this->_internal_order_local_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_local_id().data(), static_cast<int>(this->_internal_order_local_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.order_local_id");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_order_local_id(), target);
  }

  // string action_local_id = 18;
  if (!this->_internal_action_local_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action_local_id().data(), static_cast<int>(this->_internal_action_local_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.action_local_id");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_action_local_id(), target);
  }

  // string participant_id = 19;
  if (!this->_internal_participant_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_participant_id().data(), static_cast<int>(this->_internal_participant_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.participant_id");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_participant_id(), target);
  }

  // string client_id = 20;
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.client_id");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_client_id(), target);
  }

  // string business_unit = 21;
  if (!this->_internal_business_unit().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_business_unit().data(), static_cast<int>(this->_internal_business_unit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.business_unit");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_business_unit(), target);
  }

  // string order_action_status = 22;
  if (!this->_internal_order_action_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_action_status().data(), static_cast<int>(this->_internal_order_action_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.order_action_status");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_order_action_status(), target);
  }

  // string user_id = 23;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.user_id");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_user_id(), target);
  }

  // string status_msg = 24;
  if (!this->_internal_status_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status_msg().data(), static_cast<int>(this->_internal_status_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.status_msg");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_status_msg(), target);
  }

  // string reserve_1 = 25;
  if (!this->_internal_reserve_1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reserve_1().data(), static_cast<int>(this->_internal_reserve_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.reserve_1");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_reserve_1(), target);
  }

  // string branch_id = 26;
  if (!this->_internal_branch_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_branch_id().data(), static_cast<int>(this->_internal_branch_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.branch_id");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_branch_id(), target);
  }

  // string invest_unit_id = 27;
  if (!this->_internal_invest_unit_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invest_unit_id().data(), static_cast<int>(this->_internal_invest_unit_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.invest_unit_id");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_invest_unit_id(), target);
  }

  // string reserve_2 = 28;
  if (!this->_internal_reserve_2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reserve_2().data(), static_cast<int>(this->_internal_reserve_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.reserve_2");
    target = stream->WriteStringMaybeAliased(
        28, this->_internal_reserve_2(), target);
  }

  // string mac_address = 29;
  if (!this->_internal_mac_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac_address().data(), static_cast<int>(this->_internal_mac_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.mac_address");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_mac_address(), target);
  }

  // string instrument_id = 30;
  if (!this->_internal_instrument_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instrument_id().data(), static_cast<int>(this->_internal_instrument_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.instrument_id");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_instrument_id(), target);
  }

  // string ip_address = 31;
  if (!this->_internal_ip_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip_address().data(), static_cast<int>(this->_internal_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.ip_address");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_ip_address(), target);
  }

  // string direction_zn = 32;
  if (!this->_internal_direction_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_direction_zn().data(), static_cast<int>(this->_internal_direction_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.direction_zn");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_direction_zn(), target);
  }

  // string order_status_zn = 33;
  if (!this->_internal_order_status_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_status_zn().data(), static_cast<int>(this->_internal_order_status_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.order_status_zn");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_order_status_zn(), target);
  }

  // string comb_offset_flag_zn = 34;
  if (!this->_internal_comb_offset_flag_zn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comb_offset_flag_zn().data(), static_cast<int>(this->_internal_comb_offset_flag_zn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OrderActionInfo.comb_offset_flag_zn");
    target = stream->WriteStringMaybeAliased(
        34, this->_internal_comb_offset_flag_zn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrderActionInfo)
  return target;
}

size_t OrderActionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrderActionInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string broker_id = 1;
  if (!this->_internal_broker_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_broker_id());
  }

  // string investor_id = 2;
  if (!this->_internal_investor_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_investor_id());
  }

  // string order_ref = 4;
  if (!this->_internal_order_ref().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_ref());
  }

  // string exchange_id = 8;
  if (!this->_internal_exchange_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exchange_id());
  }

  // string order_sys_id = 9;
  if (!this->_internal_order_sys_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_sys_id());
  }

  // string action_flag = 10;
  if (!this->_internal_action_flag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action_flag());
  }

  // string action_date = 13;
  if (!this->_internal_action_date().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action_date());
  }

  // string action_time = 14;
  if (!this->_internal_action_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action_time());
  }

  // string trader_id = 15;
  if (!this->_internal_trader_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trader_id());
  }

  // string order_local_id = 17;
  if (!this->_internal_order_local_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_local_id());
  }

  // string action_local_id = 18;
  if (!this->_internal_action_local_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action_local_id());
  }

  // string participant_id = 19;
  if (!this->_internal_participant_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_participant_id());
  }

  // string client_id = 20;
  if (!this->_internal_client_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string business_unit = 21;
  if (!this->_internal_business_unit().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_business_unit());
  }

  // string order_action_status = 22;
  if (!this->_internal_order_action_status().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_action_status());
  }

  // string user_id = 23;
  if (!this->_internal_user_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string status_msg = 24;
  if (!this->_internal_status_msg().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status_msg());
  }

  // string reserve_1 = 25;
  if (!this->_internal_reserve_1().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reserve_1());
  }

  // string branch_id = 26;
  if (!this->_internal_branch_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_branch_id());
  }

  // string invest_unit_id = 27;
  if (!this->_internal_invest_unit_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invest_unit_id());
  }

  // string reserve_2 = 28;
  if (!this->_internal_reserve_2().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reserve_2());
  }

  // string mac_address = 29;
  if (!this->_internal_mac_address().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac_address());
  }

  // string instrument_id = 30;
  if (!this->_internal_instrument_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instrument_id());
  }

  // string ip_address = 31;
  if (!this->_internal_ip_address().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip_address());
  }

  // string direction_zn = 32;
  if (!this->_internal_direction_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_direction_zn());
  }

  // string order_status_zn = 33;
  if (!this->_internal_order_status_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_status_zn());
  }

  // string comb_offset_flag_zn = 34;
  if (!this->_internal_comb_offset_flag_zn().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comb_offset_flag_zn());
  }

  // int32 order_action_ref = 3;
  if (this->_internal_order_action_ref() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_order_action_ref());
  }

  // int32 request_id = 5;
  if (this->_internal_request_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_request_id());
  }

  // int32 front_id = 6;
  if (this->_internal_front_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_front_id());
  }

  // int32 session_id = 7;
  if (this->_internal_session_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_session_id());
  }

  // double limit_price = 11;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_limit_price = this->_internal_limit_price();
  uint64_t raw_limit_price;
  memcpy(&raw_limit_price, &tmp_limit_price, sizeof(tmp_limit_price));
  if (raw_limit_price != 0) {
    total_size += 1 + 8;
  }

  // int32 volume_change = 12;
  if (this->_internal_volume_change() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_volume_change());
  }

  // int32 install_id = 16;
  if (this->_internal_install_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_install_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderActionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrderActionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderActionInfo::GetClassData() const { return &_class_data_; }

void OrderActionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrderActionInfo *>(to)->MergeFrom(
      static_cast<const OrderActionInfo &>(from));
}


void OrderActionInfo::MergeFrom(const OrderActionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrderActionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_broker_id().empty()) {
    _internal_set_broker_id(from._internal_broker_id());
  }
  if (!from._internal_investor_id().empty()) {
    _internal_set_investor_id(from._internal_investor_id());
  }
  if (!from._internal_order_ref().empty()) {
    _internal_set_order_ref(from._internal_order_ref());
  }
  if (!from._internal_exchange_id().empty()) {
    _internal_set_exchange_id(from._internal_exchange_id());
  }
  if (!from._internal_order_sys_id().empty()) {
    _internal_set_order_sys_id(from._internal_order_sys_id());
  }
  if (!from._internal_action_flag().empty()) {
    _internal_set_action_flag(from._internal_action_flag());
  }
  if (!from._internal_action_date().empty()) {
    _internal_set_action_date(from._internal_action_date());
  }
  if (!from._internal_action_time().empty()) {
    _internal_set_action_time(from._internal_action_time());
  }
  if (!from._internal_trader_id().empty()) {
    _internal_set_trader_id(from._internal_trader_id());
  }
  if (!from._internal_order_local_id().empty()) {
    _internal_set_order_local_id(from._internal_order_local_id());
  }
  if (!from._internal_action_local_id().empty()) {
    _internal_set_action_local_id(from._internal_action_local_id());
  }
  if (!from._internal_participant_id().empty()) {
    _internal_set_participant_id(from._internal_participant_id());
  }
  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_business_unit().empty()) {
    _internal_set_business_unit(from._internal_business_unit());
  }
  if (!from._internal_order_action_status().empty()) {
    _internal_set_order_action_status(from._internal_order_action_status());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_status_msg().empty()) {
    _internal_set_status_msg(from._internal_status_msg());
  }
  if (!from._internal_reserve_1().empty()) {
    _internal_set_reserve_1(from._internal_reserve_1());
  }
  if (!from._internal_branch_id().empty()) {
    _internal_set_branch_id(from._internal_branch_id());
  }
  if (!from._internal_invest_unit_id().empty()) {
    _internal_set_invest_unit_id(from._internal_invest_unit_id());
  }
  if (!from._internal_reserve_2().empty()) {
    _internal_set_reserve_2(from._internal_reserve_2());
  }
  if (!from._internal_mac_address().empty()) {
    _internal_set_mac_address(from._internal_mac_address());
  }
  if (!from._internal_instrument_id().empty()) {
    _internal_set_instrument_id(from._internal_instrument_id());
  }
  if (!from._internal_ip_address().empty()) {
    _internal_set_ip_address(from._internal_ip_address());
  }
  if (!from._internal_direction_zn().empty()) {
    _internal_set_direction_zn(from._internal_direction_zn());
  }
  if (!from._internal_order_status_zn().empty()) {
    _internal_set_order_status_zn(from._internal_order_status_zn());
  }
  if (!from._internal_comb_offset_flag_zn().empty()) {
    _internal_set_comb_offset_flag_zn(from._internal_comb_offset_flag_zn());
  }
  if (from._internal_order_action_ref() != 0) {
    _internal_set_order_action_ref(from._internal_order_action_ref());
  }
  if (from._internal_request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_front_id() != 0) {
    _internal_set_front_id(from._internal_front_id());
  }
  if (from._internal_session_id() != 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_limit_price = from._internal_limit_price();
  uint64_t raw_limit_price;
  memcpy(&raw_limit_price, &tmp_limit_price, sizeof(tmp_limit_price));
  if (raw_limit_price != 0) {
    _internal_set_limit_price(from._internal_limit_price());
  }
  if (from._internal_volume_change() != 0) {
    _internal_set_volume_change(from._internal_volume_change());
  }
  if (from._internal_install_id() != 0) {
    _internal_set_install_id(from._internal_install_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderActionInfo::CopyFrom(const OrderActionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrderActionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderActionInfo::IsInitialized() const {
  return true;
}

void OrderActionInfo::InternalSwap(OrderActionInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &broker_id_, lhs_arena,
      &other->broker_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &investor_id_, lhs_arena,
      &other->investor_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_ref_, lhs_arena,
      &other->order_ref_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &exchange_id_, lhs_arena,
      &other->exchange_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_sys_id_, lhs_arena,
      &other->order_sys_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &action_flag_, lhs_arena,
      &other->action_flag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &action_date_, lhs_arena,
      &other->action_date_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &action_time_, lhs_arena,
      &other->action_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &trader_id_, lhs_arena,
      &other->trader_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_local_id_, lhs_arena,
      &other->order_local_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &action_local_id_, lhs_arena,
      &other->action_local_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &participant_id_, lhs_arena,
      &other->participant_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &business_unit_, lhs_arena,
      &other->business_unit_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_action_status_, lhs_arena,
      &other->order_action_status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_msg_, lhs_arena,
      &other->status_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reserve_1_, lhs_arena,
      &other->reserve_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &branch_id_, lhs_arena,
      &other->branch_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invest_unit_id_, lhs_arena,
      &other->invest_unit_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reserve_2_, lhs_arena,
      &other->reserve_2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mac_address_, lhs_arena,
      &other->mac_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &instrument_id_, lhs_arena,
      &other->instrument_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ip_address_, lhs_arena,
      &other->ip_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &direction_zn_, lhs_arena,
      &other->direction_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_status_zn_, lhs_arena,
      &other->order_status_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comb_offset_flag_zn_, lhs_arena,
      &other->comb_offset_flag_zn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderActionInfo, install_id_)
      + sizeof(OrderActionInfo::install_id_)
      - PROTOBUF_FIELD_OFFSET(OrderActionInfo, order_action_ref_)>(
          reinterpret_cast<char*>(&order_action_ref_),
          reinterpret_cast<char*>(&other->order_action_ref_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderActionInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_order_2eproto_getter, &descriptor_table_order_2eproto_once,
      file_level_metadata_order_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::OrderInfo* Arena::CreateMaybeMessage< ::OrderInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OrderInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::OrderActionInfo* Arena::CreateMaybeMessage< ::OrderActionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OrderActionInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
